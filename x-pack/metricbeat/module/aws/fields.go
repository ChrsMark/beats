// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/v7/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
