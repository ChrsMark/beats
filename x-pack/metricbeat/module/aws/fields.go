// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "eJzsXV9v27iyf++nGOxTu0h87tndcx/ycIE0Du4JkLZpnEUfVZoc2zyhSIV/4rjYD3/BP5JlW44tW3K6wO3DbmHZ5O83MxzODIfqOTzi4gLI3LwDsNwKvIBfyNz88g6AoaGaF5YreQH/8w4A4DuZm++QK+YEAlVCILUGLr+NIFeSW6W5nEKOVnNqYKJVHp5dCeXYnFg6G7wD0CiQGLyAKXkHMOEomLkIo5+DJDleAPXfHxBKlZN24D8LjwHsosALj3iuNEufNaD0fx5mGMeBNE4YG5QGIjgx4AwysAo4Q2n5ZAGMTyaoUVrwH1iOBrgEArkTlp9blCQ8euZayRylHaxAjgJcYpxq5YrXENZ51weyZGoGv1Yfl+Op8X+Q2trH8YOsSSJrj7OcFAWX0/TdX379pfa9LdILEiRTPzA8E+EQCsJ1UimZG9BolNMUzWCDgfl9MHb0EVc0t017OzB8DjqbAIHR75BG3ZiQ8Ryl4Ur+JIL7FOy/DmvdVAa/DtIiGfxaYW7Au4KVKTcWuPlkK8wtED+l5WlnxIJG67REFjW7XKhweXcDTw71YlPeYy4El9MNUddtfoeIvqcxvgNV0hIuPRwENJbnxCIDOiN6igYmSsNCOR38SLmSuVxzKeWfyrWM0ZLa59sWG61GOYrMcpg1Pnld1HPUCIZqUpTirnzjtyDy+YzT2XKABo9qvHsa132V52EKsrIQ113sNinUJVGNs/J0+5rdIRJIHrgaFkyBlE84MpjPUEbTqskfSMEbVvZCklyx8VHaKQc5kW78D4dhyuHHY2wTx+Yo2jg2J2R8/XHU3gArqvS346jS305J9eq349YaLdzAKkvEoFjZmZbkDSUCWTYRiqx/YY9FV6CmKC2Zxq1TCEWDT72++g2oygtnEZzkNomHaATqtHcnYuF9qzMISgY5cmkskRQHW4lQjYzbzBkybfYdQq1sFXtykC4fo/b4r+7+hDiJ8U4k6qGOLewR/lvOcsF/ED/sTrxjIvxve0GMJOyodeBR0HKJeUaM3860QwaG+0+4hTkxIIiTdIbMR6rGEm2RbSdjnC6EM9kJSKWpVhnNyDPCGFEuNUMkOCl4zr3FVXSDz/c/u7r78yqM8DFiTdElN/ADtdqXqclifLC+I3VENXBpJOzXilTWR8MMmJpLT3lT32dAJEtuxc6czySo0142hDHuURCRQpxmyhLtXOnHAZeDgvio1/TCNI0NGinyZ2900vuLcnrg0qKe+OhifdHtCzsrUGcGaa/wC9RgkCrJoqNWznbFRDl7Eg30iPvvrgIuB+OFxb3lP1E6J/YCmn7UilsYoI+1EQbuVS0Rek0pXbPw9vWWWuljvbyBWrqiwbh55GqgkbCTqeVjWh4kBdUef7XhG6s0wrMSLkcD5JlwQcYCwapD2HSslBrymi76ITHX3OKJdeLntCg9zj759KKVEntNMX3QCLaliq429SuVFwJ9yBusShWoQx5iDreqWH1elk0K1Fwx70Usz/cj17GCtpPsYhUdwTfaZB/aDCPXmR5oi12Q602bGySPX3uH8DWWWGcGdIb0MZsQLjpL7+6xUNoan4XaGepVpD4TL4gxyGCs7Gz1YcQEAVPI6fxTszAW89VnPNZLBDEWci6d3Z9kFsc7Mdc+iJTzvAGVZo3tS6baMqjS/j9ONtflfFg2RX10OUvpdLSxe7+qnvKcTHHAm9fEwQX6m2FYlB6GH786Fo1lqDb4llXTgddBhwcJN5JxSkJwkCyBoQ0WVy/VcgMovS/aUi+rgBaaPxOLAyZNtnZC2YFA0+gw/DxKJ85RvBuR/Z4oedFsiesft4B2c/f8BxDGNBoDxBhFeagPz3lyf62xurHgtC+BhsE35LmnVSZoHUqxFFzCce2dC6dwc1c9ee8F/AHGysUN9BCRhiU0oIo1S/NgRxTGXZfhGRADBP753+djbsFJw6cyVG/DJHsh7V7vjUjhfYGS+eX+F2gnZfybmTlruZyeh4rsX2BR51wGm/7LRyzheLz8K7IPOxjZmY9vY7zlXXVfW0GaJ4Rb5baweQaK4rjjTxSnPPm8vj3q0FOz4w49NTvloef98IBDT+jqJLAsE6TjvgM868o5YdsTtP8/8Tv1iR8jloyJwYwqKZGGXK0XOuVEUJsoHQxvQTauYv8B0bK7jeAyJz+UhPvUbRb6wd5f3n/+EEwACZ15l7EbFBXENMvqIFhXdQ9Tj0rK43WfKuaYK70ASgpCuV1AwFB+cfhxV52qhj71KPKN7aYLCsSrVZ8bVxTCp+qV8pezDuBhxk3tAx9sexZO8ieHoUsw2Hv1DT9sK4oxbeuO3iiVHiLO1N5Qjym4qZhuL79kTw4dZgwLO2vEdmCHxnKpKWe9BEJIc/PFwHsfEvwjVmQ0Pjk01nyAOeE+vgnVGEp9jOlZeYTN2MvCwpPIDOpn1BmZorTZf9S4H48RJ4TR11sYhQnh0k8IfkJgLuyge2XiE43ok7gsrp6TnjGRPHQXqkmtrqWJZCovpZ5AbUWeGau0T9PfGnbCAaH3rhlvTl547vLMZ/yZ1UQaEjx9xlmXNpKmgdoMcDMs20dM7B7xGAZwGTxQqLHeKWOnGkdfb5vBK8HQ2ExjITgN+39mhLKZINNBPu4QviDTqTdew39UTj7NWj0LYaYyoS/Vpx7ByX+7vA0Opjp5bcXPe4GMq51l3wP9D3nGYB61LZ+bx1jWv/nHl+Za8DakQRhB8i2K06XNMxcnOsbsLc8RCNx79PdJN7XNx+vJ29mMl/XbGEvU96e6bj4tRl9vz+AT0ZwMP8ZWnqW+VqbZEnmYOSlifPxGjsADiGs/FvRSN98K47Clx6zGb+dS2Zr/8NHV0pk3s6z7DKGmJpuixEZtHrMAg2HWqPhUoOZK/MStVlbYWk+/tOKO3nJtPTnUfH/zOQhdmgPwBamzyHaCYkiYUPSxX1jVLGUNvwpLd+GLZ1NhW3ur1Zc239Je4/0Fp5Ve8UtnnlqY7JWAQihKxBuHFSWfVfdgMS+UJnoB1n9mgp/0y3EXL6GmXIYjI6d7Nu4UloYZgVgP2e5ednamlZvOCmcHVOU5b67MdOYf4hxt/EINIEOBW85aunNgYY7KU7RBx0S/0IbD2ypNagUs7xkYlwa1NWfgCkYspo7gKMlWSONApwB7iILTsUan8Cq/U56ZLOeLJ/RVL2PsNfFRnY8Icm5tPLykgqO0JvZm09lKV4LfS5IvDoGe98hUOGNRLx3XASLIEqouRcElVbnPMN7fx8E/LGWiyWTCaUNk51lQ4UJFIYiLOmNVjnq5hZY/9qIrK2zDUfVx2Le8i6+Vv0noIa2yrb2lUmqmS7EoZ6cqiOUhjf73kYtPsfpYzGvZkCWPqYcuRJ8rcedOjAYFbjmO6MzlxDkOcTnRofaLLs5xCLoQ5/cLbrze4xlUvAujIBYlXbSNaLrM0xOEsIQ2gp7gfHMuBI8stgWPiUabyKIvDqG8w3DCJY+5KJFT53X1fji8/VDFJW2ZtQhN+mL2avTSkk/LAKZfSuWSbsmhldfugEFXTr3E39Kj96WDVaffUgct/X5fHFa3hpYc2u0OP5EhhcOwVNHkodz3RrWIWjlQUeoKHkssYy6JXoTyQxn65cTH9JuV3Vjl1q8WcGt0148Yuj1eaKhu1iYEPyFMuMB2Nc4a/PUibe/wjyrO1n5sBv7/W/KprupD5blwfd5UCfXBvZJAZJktLs/Fy2xyZ1hYZzMWij52emF5k84KjfW6aXV/OSHZXeitHc+zcZaS5KyPZoQD2wsSpPKeASVCRCedkrdlzTV9czdRrUSHfYzDj+AHNCD4I8K3+5uH63tQGu6vL4fX92ddAkc55RI77r+9JnS2cpSmnUyyj/OdRWbrR2a14zIfOKKlTa+JyhjhYlEWt9+tI27T97c+2FoTYHhW1bH7bAkc/X5cR2B6x5XhP96q2h+ymqoQFu77sHidZ/39W3Xc0QllapLFN1N1WdcPHZL1npk4QwO2sIaIEJWqQ89V80vKspSfHWt3aZiaxaVPfmo7K5PT2H7ao7L+/fBwtyzR54SFu2J+W42urnqv2xlonBLNRNlcvyi2dK5U2KfYnNMc280UMP/v9cMabm9cpe1x2cRhB97C9Yj37s/O8b5yuNQJ5OH17fXDddeoZ9uS9U4w//v6criXPe+yBWX6NIYvo3VrOAjlK4WDY3EukYyub6+vHuBLUHpoTPWOrmOriEwyQ4mUJ+4MWC/dlptswhLvXe0tjmPYl297/CnoV6+ePAF/wftcbRW2sNP7uVIzeIBu4gtMX8PJ1FwKRdjbaCaqZYkhLLb9tuz5zIc1sSnSFEqG9JgKx0KKNlZsS7OsK96abokg6iyFXUCq4M1jP2vvOVFrpc3gj5eX/sztj5eXdMQdp6vuPCuGe+ktrjiS3r2mJoA8XKv9L5+b/vNVYv/qk9i/Xl4g9qufkFhZm51wbWzmjWOQt7bIw0u0Berz0uZCcTbkBuVdktB4U5kk+myg6n6IL9vbEIFV8W17K4sy3CsKJbgxVo73dXmEQL7Mbk4qEhSkMLFAtUU0QVdhIS/FkS7ahhsG4UlIl3at3SoflMddPDTylBcPR5+bLx7uecvSPB1J9umkZL8eecsyXRbI0RgyxYxM8cSd6kWh1Ut4sTWky5ZeZhEWSCXPY6LFIEEsa7fh9tGW2xvxmyFHI4vu6sqrXrmcZQXQspKc5g41vs3+cY0kNNvwPEfGiUWxJRiouEhls2du+HhLDfbYTaaiUzHgEiaCT2dbdvMK2UlQrYvPao7PRCzd3p724E2pX6SlvbZCVnrqfqFVWcV4AZQIYcqNIbXQfUpLLB6T7IBsNu9Vd61zxuLeRV6TIeaFXZQdhv3c4FsTz+XdTSk+v1YYjys8ShdISWDL/ReUS3d78lJ2eVWrpYzjo27PT0ZfR8lnroxbZUHm2HOPMMKWvXj9X3Tw60AT+hinDU14KsewxTb8ax67o4r/CwAA//9kHVoi"
}
