// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package aws

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "aws", asset.ModuleFieldsPri, AssetAws); err != nil {
		panic(err)
	}
}

// AssetAws returns asset data.
// This is the base64 encoded gzipped contents of module/aws.
func AssetAws() string {
	return "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"
}
