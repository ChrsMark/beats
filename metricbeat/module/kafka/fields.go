// Licensed to Elasticsearch B.V. under one or more contributor
// license agreements. See the NOTICE file distributed with
// this work for additional information regarding copyright
// ownership. Elasticsearch B.V. licenses this file to you under
// the Apache License, Version 2.0 (the "License"); you may
// not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

// Code generated by beats/dev-tools/cmd/asset/asset.go - DO NOT EDIT.

package kafka

import (
	"github.com/elastic/beats/libbeat/asset"
)

func init() {
	if err := asset.SetFields("metricbeat", "kafka", asset.ModuleFieldsPri, AssetKafka); err != nil {
		panic(err)
	}
}

// AssetKafka returns asset data.
// This is the base64 encoded gzipped contents of ../metricbeat/module/kafka.
func AssetKafka() string {
	return "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"
}
